.header {
  height: 4rem;
  background-color: white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 1000; /* Por encima del contenido normal */
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  /* Alineación vertical de los elementos hijos */
  display: flex;
  align-items: center;
}

/* En mobile, cuando el sidebar está abierto, el header debe estar por debajo del overlay */
@media (max-width: 1023px) {
  .header {
    z-index: 999; /* Por debajo del overlay del sidebar */
  }
}

/* Alturas responsive del header */
@media (min-width: 640px) {
  .header {
    height: 4.5rem;
  }
}

@media (min-width: 768px) {
  .header {
    height: 5rem;
  }
}

@media (min-width: 1024px) {
  .header {
    height: 5.5rem;
  }
}

@media (min-width: 1280px) {
  .header {
    height: 6rem;
  }
}

/* En móviles, asegurar que el header no cause problemas */
@media (max-width: 639px) {
  .header {
    margin-bottom: 0 !important; /* Eliminar margin-bottom innecesario */
    height: 4rem !important;
  }
}

/* Estilos para el contenido principal que compensa el header fijo */
.app-main-content {
  padding-top: 4rem; /* Espacio para el header fijo en mobile */
  height: 100vh; /* Fallback para navegadores que no soportan svh */
  height: calc(var(--vh, 1vh) * 100); /* Usar variable CSS del viewport fix */
  height: 100svh; /* Altura completa del viewport */
  min-height: calc(var(--vh, 1vh) * 100); /* Fallback con variable CSS */
  overflow: hidden; /* Evitar scroll en el contenedor principal */
  box-sizing: border-box; /* Incluir padding en el cálculo de altura */
}

/* Reglas específicas para mobile no-Safari */
@media (max-width: 640px) {
  body:not(.ios-safari) .app-main-content {
    height: calc(
      var(--vh, 1vh) * 100
    ) !important; /* Forzar altura completa del viewport */
    min-height: calc(var(--vh, 1vh) * 100) !important;
  }

  .non-ios-mobile .app-main-content {
    height: calc(
      var(--vh, 1vh) * 100
    ) !important; /* Forzar altura completa del viewport */
    min-height: calc(var(--vh, 1vh) * 100) !important;
  }
}

/* Padding responsive para el contenido principal */
@media (min-width: 640px) {
  .app-main-content {
    padding-top: 4.5rem;
    height: 100vh; /* Fallback para navegadores que no soportan svh */
    height: calc(var(--vh, 1vh) * 100); /* Usar variable CSS del viewport fix */
    height: 100svh; /* Altura completa del viewport */
    min-height: calc(var(--vh, 1vh) * 100); /* Fallback con variable CSS */
  }
}

@media (min-width: 768px) {
  .app-main-content {
    padding-top: 5rem;
    height: 100vh; /* Fallback para navegadores que no soportan svh */
    height: calc(var(--vh, 1vh) * 100); /* Usar variable CSS del viewport fix */
    height: 100svh; /* Altura completa del viewport */
    min-height: calc(var(--vh, 1vh) * 100); /* Fallback con variable CSS */
  }
}

@media (min-width: 1024px) {
  .app-main-content {
    padding-top: 5.5rem;
    height: 100vh; /* Fallback para navegadores que no soportan svh */
    height: calc(var(--vh, 1vh) * 100); /* Usar variable CSS del viewport fix */
    height: 100svh; /* Altura completa del viewport */
    min-height: calc(var(--vh, 1vh) * 100); /* Fallback con variable CSS */
  }
}

@media (min-width: 1280px) {
  .app-main-content {
    padding-top: 6rem;
    height: 100vh; /* Fallback para navegadores que no soportan svh */
    height: calc(var(--vh, 1vh) * 100); /* Usar variable CSS del viewport fix */
    height: 100svh; /* Altura completa del viewport */
    min-height: calc(var(--vh, 1vh) * 100); /* Fallback con variable CSS */
  }
}
